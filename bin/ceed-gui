#!/usr/bin/env python

##############################################################################
#   CEED - Unified CEGUI asset editor
#
#   Copyright (C) 2011-2012   Martin Preisler <preisler.m@gmail.com>
#                             and contributing authors (see AUTHORS file)
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
##############################################################################

"""This file is usually started when people expect the GUI of the editor
to come up. It is probably the most important of all 3 executable scripts.
"""

def main():
    from ceed import prerequisites

    if prerequisites.check():
        import sys
        import os
        import os.path

        from ceed import application
        from ceed import paths

        # cwd has to be data dir for Qt to load the icons correctly
        os.chdir(paths.data_dir)
        
        import argparse
        
        parser = argparse.ArgumentParser(description = "CEGUI Unified Editor GUI application")
        
        # Qt has it's own set of options, mostly related to style, debugging, etc...
        # we deal with that fact by wrapping these options up into --qt-options parameter
        parser.add_argument("--qtoptions", metavar = "OPTIONS", type = str, required = False, default = "",
                            help = "These options will be passed to QApplication, see http://qt-project.org/doc/qt-4.8/qapplication.html#QApplication. \
                            Please don't use \" or ' inside the string. I was too lazy to support that when splitting the arguments.")
        
        parser.add_argument("--project", metavar = "PROJECT_FILE", type = file, required = False,
                            help = "You can open a project file immediately after CEED loads using this optional parameter.")
        
        args = parser.parse_args()
        
        # we pass the first argument, which is the app name and the split qtoptions
        split_qtoptions = sys.argv[:1]
        if args.qtoptions != "":
            split_qtoptions.extend(args.qtoptions.split(" "))
        
        # split_qtoptions has to remain valid for the entire lifetime of the app
        app = application.Application(split_qtoptions)
        
        if args.project is not None:
            app.mainWindow.openProject(os.path.abspath(args.project.name))
        
        sys.exit(app.exec_())

    else:
        print("Your environment doesn't meet critical prerequisites! Can't start!")

if __name__ == "__main__":
    main()
